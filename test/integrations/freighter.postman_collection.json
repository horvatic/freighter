{
	"info": {
		"_postman_id": "cb8e0fdc-ebfd-426b-bc53-c07a1ea02b23",
		"name": "freighter",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "basic get 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4c0fed8c-3e16-4e1d-94b1-590afd971dc5",
						"exec": [
							"pm.test(\"Body is hello\", () => {",
							"  const response = pm.response.text();",
							"  pm.expect(response).to.eql(\"hello\\n\");",
							"});",
							"",
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "apikey",
						"value": "123",
						"type": "text"
					}
				],
				"url": {
					"raw": "127.0.0.1:8080/test/hello",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8080",
					"path": [
						"test",
						"hello"
					]
				}
			},
			"response": []
		},
		{
			"name": "basic get all services",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "935d9cfa-6222-432b-9e2a-1f73e8883b43",
						"exec": [
							"pm.test(\"Return body is correct\", () => {",
							"    const host = pm.environment.get(\"host\");",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson[0].serviceName).to.eql('test');",
							"    pm.expect(responseJson[0].host).to.eql(host);",
							"    pm.expect(responseJson[0].port).to.eql('8000');",
							"});",
							"",
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:8080/config/currentservices",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8080",
					"path": [
						"config",
						"currentservices"
					]
				}
			},
			"response": []
		},
		{
			"name": "get api key",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b5cd3f22-fb42-48fe-8555-5271315a450f",
						"exec": [
							"pm.test(\"Return body is correct\", () => {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.apiKey).to.eql('123');",
							"});",
							"",
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:8080/config/getapikey",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8080",
					"path": [
						"config",
						"getapikey"
					]
				}
			},
			"response": []
		},
		{
			"name": "set api key",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "66b06fbc-c469-446e-9e90-52aeb992c2f3",
						"exec": [
							"pm.test(\"Return body is correct\", () => {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.apiKey).to.eql('werwerwe');",
							"});",
							"",
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"//Set correct state of API KEY",
							"pm.sendRequest({",
							"    url: 'http://127.0.0.1:8080/config/setapikey',",
							"    method: 'POST',",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({apiKey:\"123\"})",
							"    }",
							"}, function (err, res) {",
							"    console.log(res);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"apiKey\":\"werwerwe\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "127.0.0.1:8080/config/setapikey",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8080",
					"path": [
						"config",
						"setapikey"
					]
				}
			},
			"response": []
		},
		{
			"name": "basic get 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4221271e-a5fd-48fe-9a49-ea8b57a4f8a7",
						"exec": [
							"pm.test(\"Body is Api key failed to validate\", () => {",
							"  const response = pm.response.text();",
							"  pm.expect(response).to.eql(\"Api key failed to validate\");",
							"});",
							"",
							"pm.test(\"Status code is 403\", () => {",
							"  pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:8080/test/hello",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8080",
					"path": [
						"test",
						"hello"
					]
				}
			},
			"response": []
		},
		{
			"name": "basic get 200 Header",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "35bf2f0d-6254-423e-ad09-3b728ee28725",
						"exec": [
							"pm.test(\"response is correct\", () => {",
							"  const response = pm.response.text();",
							"  pm.expect(response).to.include(\"Hello: 123\\n\");",
							"  pm.expect(response).to.include(\"Moretest: testing123\\n\");",
							"});",
							"",
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "hello",
						"value": "123",
						"type": "text"
					},
					{
						"key": "moretest",
						"value": "testing123",
						"type": "text"
					},
					{
						"key": "Apikey",
						"value": "123",
						"type": "text"
					}
				],
				"url": {
					"raw": "127.0.0.1:8080/test/headers",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8080",
					"path": [
						"test",
						"headers"
					]
				}
			},
			"response": []
		},
		{
			"name": "basic get 200 query",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07ba3fac-6b72-4ae0-94fb-aa1166648c70",
						"exec": [
							"pm.test(\"response is hello=world\", () => {",
							"  const response = pm.response.text();",
							"  pm.expect(response).to.eql(\"hello=world\");",
							"});",
							"",
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Apikey",
						"value": "123",
						"type": "text"
					}
				],
				"url": {
					"raw": "127.0.0.1:8080/test/testquery?hello=world",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8080",
					"path": [
						"test",
						"testquery"
					],
					"query": [
						{
							"key": "hello",
							"value": "world"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE query",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "29f10fe5-32da-47ef-ae97-13135d5eebbe",
						"exec": [
							"pm.test(\"response is hello=world\", () => {",
							"  const response = pm.response.text();",
							"  pm.expect(response).to.eql(\"hello=world\");",
							"});",
							"",
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Apikey",
						"value": "123",
						"type": "text"
					}
				],
				"url": {
					"raw": "127.0.0.1:8080/test/testquery?hello=world",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8080",
					"path": [
						"test",
						"testquery"
					],
					"query": [
						{
							"key": "hello",
							"value": "world"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "basic get 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "06b0ffb2-dc1d-4dd5-bdf0-47d5a4692007",
						"exec": [
							"pm.test(\"response is 404 page not found\", () => {",
							"  const response = pm.response.text();",
							"  pm.expect(response).to.eql(\"404 page not found\\n\");",
							"});",
							"",
							"pm.test(\"Status code is 404\", () => {",
							"  pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Apikey",
						"value": "123",
						"type": "text"
					}
				],
				"url": {
					"raw": "127.0.0.1:8080/test/feweewf",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8080",
					"path": [
						"test",
						"feweewf"
					]
				}
			},
			"response": []
		},
		{
			"name": "basic get 500",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5997ff69-990d-4f69-abf6-b480ba717186",
						"exec": [
							"pm.test(\"response is 500 page not found\", () => {",
							"  const response = pm.response.text();",
							"  pm.expect(response).to.eql(\"Internal Server Error\\n\");",
							"});",
							"",
							"pm.test(\"Status code is 500\", () => {",
							"  pm.response.to.have.status(500);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Apikey",
						"value": "123",
						"type": "text"
					}
				],
				"url": {
					"raw": "127.0.0.1:8080/test/error",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8080",
					"path": [
						"test",
						"error"
					]
				}
			},
			"response": []
		},
		{
			"name": "basic get no host 500",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fb8abdf8-779b-4aeb-a35a-0d14ee698ec3",
						"exec": [
							"pm.test(\"response is 500 page not found\", () => {",
							"  const response = pm.response.text();",
							"  pm.expect(response).to.eql(\"No service found\");",
							"});",
							"",
							"pm.test(\"Status code is 500\", () => {",
							"  pm.response.to.have.status(500);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Apikey",
						"value": "123",
						"type": "text"
					}
				],
				"url": {
					"raw": "127.0.0.1:8080/nohost/hello",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8080",
					"path": [
						"nohost",
						"hello"
					]
				}
			},
			"response": []
		},
		{
			"name": "basic POST",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "da2d31dd-e385-43bb-842e-de654868e342",
						"exec": [
							"pm.test(\"response\", () => {",
							"  const response = pm.response.text();",
							"  pm.expect(response).to.eql(\"hello all from post\");",
							"});",
							"",
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Apikey",
						"value": "123",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "hello all from post"
				},
				"url": {
					"raw": "127.0.0.1:8080/test/testbody",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8080",
					"path": [
						"test",
						"testbody"
					]
				}
			},
			"response": []
		},
		{
			"name": "basic PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "781e0d75-fada-42f0-8f4e-e266b2de36e0",
						"exec": [
							"pm.test(\"response\", () => {",
							"  const response = pm.response.text();",
							"  pm.expect(response).to.eql(\"hello all from put\");",
							"});",
							"",
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Apikey",
						"value": "123",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "hello all from put"
				},
				"url": {
					"raw": "127.0.0.1:8080/test/testbody",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8080",
					"path": [
						"test",
						"testbody"
					]
				}
			},
			"response": []
		},
		{
			"name": "basic PATCH",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "10ddeeaa-aefc-4b86-aa6b-09051b7ade68",
						"exec": [
							"pm.test(\"response\", () => {",
							"  const response = pm.response.text();",
							"  pm.expect(response).to.eql(\"hello all from patch\");",
							"});",
							"",
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Apikey",
						"value": "123",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "hello all from patch"
				},
				"url": {
					"raw": "127.0.0.1:8080/test/testbody",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8080",
					"path": [
						"test",
						"testbody"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}